---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: word-generator
  labels:
    app: grafana
    component: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: word-generator
  labels:
    app: grafana
    component: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: false
        version: 1

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: word-generator
  labels:
    app: grafana
    component: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'Word Generator Dashboards'
        orgId: 1
        folder: 'Word Generator'
        type: file
        disableDeletion: true
        editable: false
        options:
          path: /etc/grafana/provisioning/dashboards
  performance.json: |
    {
      "title": "Word Generator Performance",
      "uid": "word-gen-perf",
      "panels": [
        {
          "title": "API Response Times",
          "type": "graph",
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))",
              "legendFormat": "95th percentile"
            }
          ]
        },
        {
          "title": "Word Generation Times",
          "type": "graph",
          "targets": [
            {
              "expr": "word_generation_duration_seconds",
              "legendFormat": "Generation time"
            }
          ]
        }
      ]
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: word-generator
  labels:
    app: grafana
    component: monitoring
type: Opaque
data:
  admin-password: UmFuZG9tV29yZEdlbkFkbWluMTIzIQ== # Base64 encoded

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: word-generator
  labels:
    app: grafana
    component: monitoring
    version: "9.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        version: "9.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.word-generator.com"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_DASHBOARDS_MIN_REFRESH_INTERVAL
              value: "10s"
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-datasources
          configMap:
            name: grafana-datasources

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: word-generator
  labels:
    app: grafana
    component: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: grafana

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: word-generator
  labels:
    app: grafana
    component: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - grafana.word-generator.com
      secretName: grafana-tls
  rules:
    - host: grafana.word-generator.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  name: http